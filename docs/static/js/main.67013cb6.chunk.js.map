{"version":3,"sources":["assets/cripto.png","Hooks/useMoneda.js","Hooks/useCripto.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","CriptoApp.js","index.js"],"names":["Label","styled","label","Select","select","Boton","input","monedas","codigo","nombre","Formulario","guardarDatosCotizacion","useState","stateListaCripto","setStateListaCripto","initialState","opciones","state","actualizarState","onChange","e","target","value","map","opcion","useMoneda","monedaState","SelectMoneda","CoinInfo","Name","FullName","Id","useCripto","criptoState","SelectCripto","useEffect","consultarApi","a","fetch","request","json","response","Data","onSubmit","preventDefault","Swal","fire","type","ResultadoDiv","div","Parrafo","p","Precio","VarNeg","VarPos","Cotizacion","cotizacion","Object","keys","length","parseFloat","CHANGEPCT24HOUR","PRICE","HIGHDAY","LOWDAY","Spinner","className","Contenedor","Imagen","img","Heading","h1","CriptoApp","stateResutadoCotizacion","setstateResutadoCotizacion","moneda","cripto","stateDatosACotizar","setStateDatosACotizar","loading","setloading","consultaCotizacionApi","urlApi","DISPLAY","setTimeout","src","imagen","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67013cb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cripto.51f1d2ed.png\";","import { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\nfont-family: 'Bebas Neue', cursive;\r\ncolor: #fff;\r\ntext-transform:uppercase;\r\nfont-weight:bold;\r\nfont-size:2.4rem;\r\nmagin-top:2rem;\r\ndisplay:block;\r\n`;\r\nconst Select = styled.select`\r\nwidth:100%;\r\ndisplay:block;\r\npadding:1rem;\r\n-webkit-appearance:none;\r\nborder-radius:10px;\r\nfont-size:1.1rem;\r\n`;\r\n\r\nexport const useMoneda = (label, initialState={}, opciones) => {\r\n\r\n    const [state, actualizarState] = useState(initialState);\r\n\r\n    const Seleccionar = () => {\r\n        return (\r\n\r\n            <>\r\n            <Label>{label}</Label>\r\n            <Select\r\n            onChange={e => actualizarState(e.target.value)}\r\n            value={state}\r\n            >\r\n                <option value=\"\">-- Seleccione --</option>\r\n                {\r\n                    opciones.map(opcion => (\r\n                        <option\r\n                        key={opcion.codigo}\r\n                        value={opcion.codigo}\r\n                        >{opcion.nombre}</option>\r\n                    ))\r\n                }\r\n            </Select>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return [state, Seleccionar];\r\n}\r\n","import { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\nfont-family: 'Bebas Neue', cursive;\r\ncolor: #fff;\r\ntext-transform:uppercase;\r\nfont-weight:bold;\r\nfont-size:2.4rem;\r\nmagin-top:2rem;\r\ndisplay:block;\r\n`;\r\nconst Select = styled.select`\r\nwidth:100%;\r\ndisplay:block;\r\npadding:1rem;\r\n-webkit-appearance:none;\r\nborder-radius:10px;\r\nfont-size:1.1rem;\r\n`;\r\n\r\nexport const useCripto = (label, initialState={}, opciones) => {\r\n    \r\n\r\n    const [state, actualizarState] = useState(initialState);\r\n\r\n    const SelectCripto = () => {\r\n        return (\r\n\r\n            <>\r\n            <Label>{label}</Label>\r\n            <Select\r\n            onChange={e => actualizarState(e.target.value)}\r\n            value={state}\r\n            >\r\n                <option value=\"\">-- Seleccione --</option>\r\n                {\r\n                    opciones.map(opcion => (\r\n                        <option\r\n                        key={opcion.CoinInfo.Id}\r\n                        value={opcion.CoinInfo.Name}\r\n                        >{opcion.CoinInfo.FullName}</option>\r\n                    ))\r\n                }\r\n            </Select>\r\n            </>\r\n        );\r\n    }\r\n    \r\n    return [state, SelectCripto];\r\n\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useMoneda } from '../Hooks/useMoneda';\r\nimport { useCripto } from '../Hooks/useCripto';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Boton = styled.input`\r\nmargin:auto;\r\nmargin-top:20px;\r\nfont-weight:bold;\r\nfont-size:20px;\r\npadding:10px;\r\nbackground-color:#66a2fe;\r\nborder:none;\r\nwidth:100%;\r\nborder-radius:10px;\r\ncolor:#fff;\r\ntransition:background-color .3s ease;\r\n\r\n&:hover{\r\n    background-color:#326AC0;\r\n    cursor:pointer; \r\n}\r\n`;\r\n\r\nconst monedas = [\r\n    {codigo: 'ARS', nombre: 'Peso Argentino'},\r\n    {codigo: 'USD', nombre: 'Dolar de Estados Unidos'},\r\n    {codigo: 'MXN', nombre: 'Peso Mexicano'},\r\n    {codigo: 'EUR', nombre: 'Euro'}\r\n];\r\nexport const Formulario = ({guardarDatosCotizacion}) => {\r\n\r\n    const [stateListaCripto, setStateListaCripto] = useState([]);\r\n    const [monedaState, SelectMoneda] = useMoneda('Elige la moneda', '' ,monedas);\r\n    const [criptoState, SelectCripto] = useCripto('Elige la criptomoneda', '', stateListaCripto);\r\n\r\n    //API de Criptos\r\n    useEffect(()=>{\r\n        const consultarApi = async() => {\r\n\r\n            const url = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD`;\r\n            const request = await fetch(url);\r\n            const response = await request.json();\r\n\r\n            //setStateListaCripto(response.data.Data);\r\n            setStateListaCripto(response.Data);\r\n        }\r\n\r\n        consultarApi();\r\n    }, []); \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(monedaState === '' || criptoState === ''){\r\n            return  Swal.fire('Error', 'Completa todos los campos', 'error');\r\n        }\r\n\r\n        guardarDatosCotizacion(monedaState, criptoState);\r\n    }\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n          <SelectMoneda/>\r\n          <SelectCripto/>\r\n          <Boton type=\"submit\" value=\"CALCULAR\"/>\r\n        </form>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ResultadoDiv = styled.div`\r\ncolor:#fff;\r\nfont-family: sans-serif;\r\ntext-align:center;\r\nfont-family: Arial, Helvetica, sans-serif;\r\np{\r\n    margin:5px;\r\n}\r\n`;\r\nconst Parrafo = styled.p`\r\nfont-size:18px;\r\n`;\r\nconst Precio = styled.p`\r\nfont-size:20px;\r\nmargin-bottom:10px;\r\n\r\nspan{\r\n    font-size:30px;\r\n    font-weight:bold;\r\n}\r\n\r\n`;\r\n\r\nconst VarNeg = styled.p`\r\ncolor:#a70c2d;\r\nfont-size:25px;\r\nfont-weight:bold;\r\n\r\n`;\r\nconst VarPos = styled.p`\r\ncolor:#0da931;\r\nfont-size:25px;\r\nfont-weight:bold;\r\n`;\r\n\r\nexport const Cotizacion = ({cotizacion}) => {\r\n    \r\n    if(Object.keys(cotizacion).length === 0) { return null;}\r\n    \r\n    return (\r\n        <ResultadoDiv>\r\n            {\r\n                (parseFloat(cotizacion.CHANGEPCT24HOUR) < 0 ) ?\r\n                <VarNeg>VARIACION {cotizacion.CHANGEPCT24HOUR}</VarNeg>\r\n                :\r\n                <VarPos>VARIACION {cotizacion.CHANGEPCT24HOUR}</VarPos>\r\n            }\r\n            \r\n\r\n            <Precio>El precio es: <span>{cotizacion.PRICE}</span></Precio>\r\n            <Parrafo>Precio mas alto del día: {cotizacion.HIGHDAY}</Parrafo>\r\n            <Parrafo>Precio mas bajo del día: {cotizacion.LOWDAY}</Parrafo>\r\n            \r\n            <br/><br/>\r\n        </ResultadoDiv>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport imagen from './assets/cripto.png';\r\nimport { Formulario } from './components/Formulario';\r\nimport { Cotizacion } from './components/Cotizacion';\r\nimport { Spinner } from './components/Spinner';\r\n\r\nconst Contenedor = styled.div`\r\nmax-width: 900px;\r\nmargin: 0 auto;\r\n@media(min-width:992px){\r\n    display:grid;\r\n    grid-template-columns: repeat(2,1fr);\r\n    column-gap:2rem;\r\n}\r\n`;\r\nconst Imagen = styled.img`\r\nmax-width:100%;\r\nmargin-top:3rem;\r\nmax-heigth:70%\r\n`;\r\n\r\nconst Heading = styled.h1`\r\nfont-family: 'Bebas Neue', cursive;\r\ncolor: #fff;\r\ntext-align:left;\r\nfont-weigth:700;\r\nfont-size:50px;\r\nmargin-bottom:50px;\r\nmargin-top:40px;\r\n\r\n&::after{\r\n    content: '';\r\n    width:100px;\r\n    height:6px;\r\n    background-color:#66A2FE;\r\n    display:block;\r\n}\r\n`;\r\nexport const CriptoApp = () => {\r\n    \r\n    const [stateResutadoCotizacion, setstateResutadoCotizacion] = useState({});\r\n    const [stateDatosACotizar, setStateDatosACotizar] = useState({moneda: '', cripto: ''});\r\n    const { moneda, cripto } = stateDatosACotizar;\r\n\r\n    const guardarDatosCotizacion = (moneda, cripto) => {\r\n        setStateDatosACotizar({\r\n            moneda,\r\n            cripto\r\n        });\r\n    }\r\n\r\n    const [loading, setloading] = useState(false);\r\n\r\n    //Api cotizacion\r\n    const consultaCotizacionApi = async() => {\r\n        \r\n        setloading(true);\r\n\r\n        const urlApi = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${cripto}&tsyms=${moneda}`; \r\n    \r\n        const request = await fetch(urlApi);\r\n        const response = await request.json();\r\n        setstateResutadoCotizacion(response.DISPLAY[cripto][moneda]);\r\n\r\n        setTimeout(() => {\r\n            setloading(false);\r\n        }, 3000);\r\n        \r\n    \r\n    } \r\n    \r\n    useEffect(()=> {\r\n\r\n        if(moneda === '' || cripto=== '') return;\r\n        consultaCotizacionApi();\r\n\r\n    \r\n    }, [moneda, cripto]);\r\n\r\n    return (\r\n        <Contenedor>\r\n            <div>\r\n                <Imagen src={imagen} alt=\"imagen cripto\"/>\r\n            </div>\r\n            <div>\r\n                <Heading>Cotizador de criptomonedas</Heading>\r\n                <Formulario guardarDatosCotizacion={guardarDatosCotizacion}/>\r\n                {\r\n                    (!loading) ? <Cotizacion cotizacion={stateResutadoCotizacion}/>\r\n\r\n                    : <Spinner/>\r\n                }\r\n                \r\n            </div>\r\n        </Contenedor>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CriptoApp } from './CriptoApp';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CriptoApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}